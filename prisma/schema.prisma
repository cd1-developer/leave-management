generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
   id  String @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email String @unique
  password String
  role Role?
  createdAt  DateTime   @default(now()) 
  organizations Organization[] @relation("User")
  orgMember      OrgMember?     @relation("OrgMember") 
}

model Organization {
   id  String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user User @relation("User", fields: [userId],references: [id])
  organizationName String
  industryType String
  organizationDiscription String
  orgMembers OrgMember[] @relation("OrganizationMembers")
}

model OrgMember {
   id  String @id @default(auto()) @map("_id") @db.ObjectId
  organizationId String @db.ObjectId
  userId         String @db.ObjectId @unique
  organization   Organization               @relation("OrganizationMembers", fields: [organizationId], references: [id])
  user           User         @relation("OrgMember", fields: [userId], references: [id])
  managedBy      OrgMemberReportManager[]   // Reference to join table
}

model ReportManager {
   id  String @id @default(auto()) @map("_id") @db.ObjectId
  manages        OrgMemberReportManager[]   // Reference to join table
}

// Explicit join table (for extra metadata)
model OrgMemberReportManager {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  orgMemberId     String         @db.ObjectId
  reportManagerId String         @db.ObjectId
  assignedAt      DateTime       @default(now())

  orgMember       OrgMember      @relation(fields: [orgMemberId], references: [id])
  reportManager   ReportManager  @relation(fields: [reportManagerId], references: [id])

  @@unique([orgMemberId, reportManagerId]) // Enforce uniqueness without being primary key
}

enum Role {
  USER
  ADMIN
  REPORTED_MANAGER
  MEMBER
}