generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
   id  String @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email String @unique
  password String
  role Role?
  createdAt  DateTime   @default(now()) 
  organizations Organization[] @relation("User")
   orgMember      OrgMember?     @relation("OrgMember") 
  reportManager ReportManager? @relation("reportManager")
}

model Organization {
   id  String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user User @relation("User", fields: [userId],references: [id])
  organizationName String
  industryType String
  organizationDiscription String
  orgMembers OrgMember[] @relation("OrganizationMembers")
  createdAt  DateTime   @default(now()) 
}

model OrgMember {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  organizationId String @db.ObjectId
  userId         String @db.ObjectId @unique
  organization   Organization               @relation("OrganizationMembers", fields: [organizationId], references: [id])
  user           User         @relation("OrgMember", fields: [userId], references: [id])
  reportManagerId String?      @db.ObjectId
  reportManager   ReportManager? @relation("ReportManagerToMembers",fields: [reportManagerId], references: [id])
  createdAt  DateTime   @default(now()) 
}

model ReportManager{
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  organizationId String
  orgMemberId String
  userId String @db.ObjectId @unique
  user User @relation("reportManager",fields: [userId],references: [id])
  members         OrgMember[]  @relation("ReportManagerToMembers")
}

model leaveTypes{
    id              String @id @default(auto()) @map("_id") @db.ObjectId
    organizationId  String @db.ObjectId
    type String 
    leaveInYear Int
    leaveInMonth Int?
    colorCode String
    leaveDiscription String
}

enum Role {
  USER
  ADMIN
  REPORTED_MANAGER
  MEMBER
}